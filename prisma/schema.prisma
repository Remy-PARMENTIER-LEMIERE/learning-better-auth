// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Post {
  id      String  @id @default(cuid())
  title   String
  content String?

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map(name: "posts")
}

model User {
  id            String  @id @default(cuid())
  name          String  @db.Text
  email         String
  emailVerified Boolean
  image         String? @db.Text

  createdAt DateTime
  updatedAt DateTime

  sessions Session[]
  accounts Account[]
  posts    Post[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime
  token     String

  createdAt DateTime
  updatedAt DateTime

  ipAddress String? @db.Text
  userAgent String? @db.Text

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id         String @id @default(cuid())
  accountId  String @db.Text
  providerId String @db.Text

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  accessToken           String?   @db.Text
  refreshToken          String?   @db.Text
  idToken               String?   @db.Text
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?   @db.Text
  password              String?   @db.Text

  createdAt DateTime
  updatedAt DateTime

  @@map("account")
}

model Verification {
  id         String   @id @default(cuid())
  identifier String   @db.Text
  value      String   @db.Text
  expiresAt  DateTime

  createdAt DateTime?
  updatedAt DateTime?

  @@map("verification")
}
